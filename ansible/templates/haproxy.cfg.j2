# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

frontend api-server-6443
    bind :6443
    default_backend api-server-6443-be
    mode tcp
    option tcplog

backend api-server-6443-be
    balance source
    mode tcp
{% if bootstrap_node is defined %}    
    server      {{ bootstrap_node.name }} {{ bootstrap_node.ip }}:6443 check
{% endif %} 
{% for machine in  master_nodes %}
    server      {{ machine.name }} {{ machine.ip }}:6443 check
{% endfor %}

frontend machine-config-server-22623
    bind :22623
    default_backend machine-config-server-22623-be
    mode tcp
    option tcplog

backend machine-config-server-22623-be
    balance source
    mode tcp
{% if bootstrap is defined %} 
    server      {{ bootstrap_node.name }} {{ bootstrap_node.ip }}:22623 check
{% endif %}
{% for machine in  master_nodes %}
    server      {{ machine.name }} {{ machine.ip }}:22623 check
{% endfor %}

frontend ingress-router-443
    bind :443
    default_backend ingress-router-443-be
    mode tcp
    option tcplog

backend ingress-router-443-be
    balance source
    mode tcp
{% if bootstrap is not defined %}
{% for machine in  master_nodes %}
    server      {{ machine.name }} {{ machine.ip }}:443 check
{% endfor %}
{% endif %}
{% for machine in  worker_nodes %}
    server      {{ machine.name }} {{ machine.ip }}:443 check
{% endfor %}

frontend ingress-router-80
    bind *:80
    default_backend ingress-router-80-be
    mode tcp
    option tcplog

backend ingress-router-80-be
    balance source
    mode tcp
{% if bootstrap is not defined %}
{% for machine in  master_nodes %}
    server      {{ machine.name }} {{ machine.ip }}:80 check
{% endfor %}
{% endif %}
{% for machine in  worker_nodes %}
    server      {{ machine.name }} {{ machine.ip }}:80 check
{% endfor %}
